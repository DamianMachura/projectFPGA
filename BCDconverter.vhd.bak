library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

-- BCD Converter entity declaration
entity BCDConverter is
    Port (
        Distance_input : in  std_logic_vector(8 downto 0);
        hundreds   : out std_logic_vector(3 downto 0);
		  tens   : out std_logic_vector(3 downto 0);
		  unit   : out std_logic_vector(3 downto 0)
    );
end BCDConverter;

begin
process(Distance_input)
		variable i : integer:=0;
		variable bcd : atd_logic_vector(20 downto 0);
		
		beginbcd := (others => '0');
		bcd(8 downto 0) := Distance_input;
		
For i in 0 to 8 loop
		bcd(19 downto 0) := bcd(18 downto 0) & '0';
		
		if(i < 8 and bcd(12 downto 9) > "0100") then
		bcd(12 downto 9) := bcd(12 downto 9) + "0011";
		end if;
		if(i < 8 and bcd(16 downto 13) > "0100") then
		bcd(16 downto 13) := bcd(16 downto 13) + "0011";
		end if;
		if(i < 8 and bcd(20 downto 17) > "0100") then
		bcd(20 downto 17) := bcd(20 downto 17)) + "0011";
		end if;
		end loop;
		
		hundreds <= cd(20 downto 17);
		tens <= cd(16 downto 13);
		unit <= cd(12 downto 9);
	end process;

end Behavioral;
