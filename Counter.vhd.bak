library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

-- Counter entity declaration
entity Counter is
		generic(n: POSITIVE := 10);
    Port (
        clk   : in  std_logic;  -- Clock input
		  enable : in STD_LOGIC;
        reset : in  std_logic;  -- Reset input
        count : out std_logic_vector(n-1 downto 0)  -- 4-bit counter output
    );
end Counter;

-- Counter architecture definition
architecture Behavioral of Counter is
    signal counter_reg : std_logic_vector(n-1 downto 0) := "0000";  -- 4-bit counter register

begin
    process(clk, reset)
    begin
        if (reset = '0') then
            -- Reset the counter to zero when reset is asserted
            counter_reg <= (others => '0');
        elsif (rising_edge(clk) and clk = '1') then
			if (enable = '1') then
            counter_reg <= counter_reg + 1;
        end if;
    end process;

    -- Output the counter value
    count <= counter_reg;

end Behavioral;
