library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity Trigger_Generator is
    Port (
        clk : in  std_logic;    -- Clock input
        trigger  : out std_logic     -- Trigger pulse output
    );
end Trigger_Generator;

-- Trigger Generator architecture definition
architecture Behavioral of Trigger_Generator is
component Counter is
		generic(n: POSITIVE := 10);
    Port (
        clk   : in  std_logic;  -- Clock input
		  enable : in STD_LOGIC;
        reset : in  std_logic;  -- Reset input
        count : out std_logic_vector(n-1 downto 0)  -- 4-bit counter output
    );
end component;
    signal resetCounter : std_logic;
	 signal outputCounter : std_logic_vector(23 downto 0);


begin
    process(clk)
    begin
       trigg : Counter generic map(22) port map(clk,'1',resetCounter, outputCounter);
	 process(clk)
constant ms250 : STD_LOGIC_VECTOR(23 downto 0) := "10111110101110000100000";
constant ms250And100us : STD_LOGIC_VECTOR(23 downto 0) := "101111101100111110101000";
		begin
		     if(outputCounter > ms250 and outputCounter < ms250And100us) then
					trigger <= '1';
					else
					trigger <= '0';
	
	end process;

end Behavioral;